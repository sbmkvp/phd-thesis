\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{// ===============================================}
\PYG{c+c1}{// Import the required modules}
\PYG{c+c1}{// ===============================================}
\PYG{k+kr}{const} \PYG{n+nx}{csv} \PYG{o}{=} \PYG{n+nx}{require}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}csv\PYGZsq{}}\PYG{p}{);}
\PYG{k+kr}{const} \PYG{n+nx}{crypto} \PYG{o}{=} \PYG{n+nx}{require}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}crypto\PYGZsq{}}\PYG{p}{);}
\PYG{k+kr}{const} \PYG{n+nx}{adler32} \PYG{o}{=} \PYG{n+nx}{require}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}adler32\PYGZsq{}}\PYG{p}{);}
\PYG{k+kr}{const} \PYG{n+nx}{Writable} \PYG{o}{=} \PYG{n+nx}{require}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}stream\PYGZdq{}}\PYG{p}{).}\PYG{n+nx}{Writable}\PYG{p}{;}
\PYG{k+kr}{const} \PYG{n+nx}{moment} \PYG{o}{=} \PYG{n+nx}{require}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}moment\PYGZsq{}}\PYG{p}{);}
\PYG{k+kr}{const} \PYG{n+nx}{schedule} \PYG{o}{=} \PYG{n+nx}{require}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}node\PYGZhy{}schedule\PYGZsq{}}\PYG{p}{);}
\PYG{k+kr}{const} \PYG{n+nx}{zlib} \PYG{o}{=} \PYG{n+nx}{require}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}zlib\PYGZsq{}}\PYG{p}{);}
\PYG{k+kr}{const} \PYG{n+nx}{io} \PYG{o}{=} \PYG{n+nx}{require}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}socket.io\PYGZhy{}client\PYGZsq{}}\PYG{p}{)}

\PYG{c+c1}{// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{c+c1}{// Global variables to buffer the output for every}
\PYG{c+c1}{// 5 minutes, server ip address}
\PYG{c+c1}{// and port where the data needs to be pushed and }
\PYG{c+c1}{// the sensor id which is sending}
\PYG{c+c1}{// the data.}
\PYG{c+c1}{// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{k+kd}{var} \PYG{n+nx}{timestamp} \PYG{o}{=} \PYG{l+s+s1}{\PYGZsq{}\PYGZsq{}}\PYG{p}{;}
\PYG{k+kd}{var} \PYG{n+nx}{buffer} \PYG{o}{=} \PYG{p}{[];}
\PYG{k+kd}{var} \PYG{n+nx}{server\PYGZus{}address} \PYG{o}{=} \PYG{n+nx}{process}\PYG{p}{.}\PYG{n+nx}{argv}\PYG{p}{[}\PYG{l+m+mi}{2}\PYG{p}{];}
\PYG{k+kd}{var} \PYG{n+nx}{sensor\PYGZus{}id} \PYG{o}{=} \PYG{n+nx}{process}\PYG{p}{.}\PYG{n+nx}{argv}\PYG{p}{[}\PYG{l+m+mi}{3}\PYG{p}{];}

\PYG{c+c1}{// ===============================================}
\PYG{c+c1}{// Create a new websocket connection and on}
\PYG{c+c1}{// connection to the server.}
\PYG{c+c1}{// ===============================================}
\PYG{k+kd}{var} \PYG{n+nx}{socket} \PYG{o}{=} \PYG{k}{new} \PYG{n+nx}{io}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}http://\PYGZsq{}}\PYG{o}{+}\PYG{n+nx}{server\PYGZus{}address}\PYG{p}{);}

\PYG{c+c1}{// ===============================================}
\PYG{c+c1}{// Scheduler which is invoked every 5 minutes}
\PYG{c+c1}{// which sends the buffered data in}
\PYG{c+c1}{// the global variable to the server by emitting}
\PYG{c+c1}{// event in the socket}
\PYG{c+c1}{// ===============================================}
\PYG{n+nx}{schedule}\PYG{p}{.}\PYG{n+nx}{scheduleJob}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}00 */5 * * * * *\PYGZsq{}}\PYG{p}{,} \PYG{k+kd}{function}\PYG{p}{()\PYGZob{}}
  \PYG{k}{if}\PYG{p}{(}\PYG{n+nx}{timestamp}\PYG{o}{!=}\PYG{l+s+s1}{\PYGZsq{}\PYGZsq{}}\PYG{p}{)} \PYG{p}{\PYGZob{}} 
    \PYG{k+kd}{var} \PYG{n+nx}{data} \PYG{o}{=} \PYG{p}{\PYGZob{}}
      \PYG{n+nx}{sensor} \PYG{o}{:} \PYG{n+nx}{sensor\PYGZus{}id}\PYG{p}{,}
      \PYG{n+nx}{timestamp} \PYG{o}{:} \PYG{n+nx}{timestamp}\PYG{p}{,}
      \PYG{n+nx}{data} \PYG{o}{:} \PYG{n+nx}{buffer}
    \PYG{p}{\PYGZcb{}}
    \PYG{n+nx}{timestamp} \PYG{o}{=} \PYG{l+s+s1}{\PYGZsq{}\PYGZsq{}}\PYG{p}{;}
    \PYG{n+nx}{buffer} \PYG{o}{=} \PYG{p}{[];}
    \PYG{n+nx}{data} \PYG{o}{=} \PYG{n+nx}{zlib}\PYG{p}{.}\PYG{n+nx}{gzipSync}\PYG{p}{(}\PYG{n+nx}{JSON}\PYG{p}{.}\PYG{n+nx}{stringify}\PYG{p}{(}\PYG{n+nx}{data}\PYG{p}{));}
    \PYG{n+nx}{socket}\PYG{p}{.}\PYG{n+nx}{emit}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}data\PYGZsq{}}\PYG{p}{,}\PYG{n+nx}{data}\PYG{p}{);}
  \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{});}

\PYG{c+c1}{// ===============================================}
\PYG{c+c1}{// create a writable steam which buffers the probe}
\PYG{c+c1}{// requests collected into the}
\PYG{c+c1}{// global data variable. Which is flushed and sent}
\PYG{c+c1}{// to the server at regular schedules.}
\PYG{c+c1}{// ===============================================}
\PYG{k+kd}{var} \PYG{n+nx}{buffer\PYGZus{}data} \PYG{o}{=} \PYG{n+nx}{Writable}\PYG{p}{(\PYGZob{}}\PYG{n+nx}{objectMode}\PYG{o}{:}\PYG{k+kc}{true}\PYG{p}{\PYGZcb{});}
\PYG{n+nx}{buffer\PYGZus{}data}\PYG{p}{.}\PYG{n+nx}{\PYGZus{}write} \PYG{o}{=} \PYG{k+kd}{function} \PYG{p}{(}\PYG{n+nx}{chunk}\PYG{p}{,} \PYG{n+nx}{encoding}\PYG{p}{,} \PYG{n+nx}{next}\PYG{p}{)} \PYG{p}{\PYGZob{}}
  \PYG{n+nx}{timestamp} \PYG{o}{=} \PYG{n+nx}{chunk}\PYG{p}{.}\PYG{n+nx}{splice}\PYG{p}{(}\PYG{l+m+mi}{6}\PYG{p}{,}\PYG{l+m+mi}{1}\PYG{p}{);}
  \PYG{n+nx}{buffer}\PYG{p}{.}\PYG{n+nx}{push}\PYG{p}{(}\PYG{n+nx}{chunk}\PYG{p}{);}
  \PYG{n+nx}{next}\PYG{p}{();}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{// ===============================================}
\PYG{c+c1}{// Modify the read data \PYGZhy{} Split the MAC address}
\PYG{c+c1}{// into two parts, hash the user }
\PYG{c+c1}{// part using MD5 algorithm and format the date }
\PYG{c+c1}{// field better.}
\PYG{c+c1}{// ===============================================}
\PYG{k+kd}{function} \PYG{n+nx}{clean\PYGZus{}record}\PYG{p}{(}\PYG{n+nx}{record}\PYG{p}{)\PYGZob{}}
  \PYG{n+nx}{d\PYGZus{}form} \PYG{o}{=} \PYG{l+s+s1}{\PYGZsq{}MMM DD, YYYY HH:mm:ss.SSSSSSS\PYGZsq{}}\PYG{p}{;}
  \PYG{k+kd}{var} \PYG{n+nx}{mac\PYGZus{}split} \PYG{o}{=} \PYG{n+nx}{record}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{].}\PYG{n+nx}{split}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}:\PYGZdq{}}\PYG{p}{);}
  \PYG{k+kd}{var} \PYG{n+nx}{oui} \PYG{o}{=} \PYG{n+nx}{mac\PYGZus{}split}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{o}{+}
    \PYG{n+nx}{mac\PYGZus{}split}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]}\PYG{o}{+}
    \PYG{n+nx}{mac\PYGZus{}split}\PYG{p}{[}\PYG{l+m+mi}{2}\PYG{p}{];}
  \PYG{n+nx}{record}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]} \PYG{o}{=} \PYG{n+nx}{crypto}\PYG{p}{.}\PYG{n+nx}{createHash}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}md5\PYGZsq{}}\PYG{p}{)}
    \PYG{p}{.}\PYG{n+nx}{update}\PYG{p}{(}\PYG{n+nx}{record}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{])}
    \PYG{p}{.}\PYG{n+nx}{digest}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}hex\PYGZsq{}}\PYG{p}{)}
    \PYG{p}{.}\PYG{n+nx}{toString}\PYG{p}{();}
  \PYG{n+nx}{record}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]} \PYG{o}{=} \PYG{n+nx}{adler32}\PYG{p}{.}\PYG{n+nx}{Hash}\PYG{p}{().}
    \PYG{n+nx}{update}\PYG{p}{(}\PYG{n+nx}{record}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]).}\PYG{n+nx}{digest}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}hex\PYGZsq{}}\PYG{p}{)}
  \PYG{n+nx}{record}\PYG{p}{.}\PYG{n+nx}{push}\PYG{p}{(}\PYG{n+nx}{oui}\PYG{p}{);}
  \PYG{n+nx}{record}\PYG{p}{.}\PYG{n+nx}{splice}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{n+nx}{moment}\PYG{p}{(}\PYG{n+nx}{record}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{],} \PYG{n+nx}{d\PYGZus{}form}\PYG{p}{)}
    \PYG{p}{.}\PYG{n+nx}{format}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}mm:ss.SSS\PYGZsq{}}\PYG{p}{));}
  \PYG{n+nx}{record}\PYG{p}{.}\PYG{n+nx}{push}\PYG{p}{(}\PYG{n+nx}{moment}\PYG{p}{(}\PYG{n+nx}{record}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{],} \PYG{n+nx}{d\PYGZus{}form}\PYG{p}{)}
    \PYG{p}{.}\PYG{n+nx}{format}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}YYYY\PYGZhy{}MM\PYGZhy{}DD HH:\PYGZsq{}}\PYG{p}{));}
  \PYG{n+nx}{record}\PYG{p}{.}\PYG{n+nx}{splice}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+m+mi}{1}\PYG{p}{);}
  \PYG{k}{return}\PYG{p}{(}\PYG{n+nx}{record}\PYG{p}{)}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{// ===============================================}
\PYG{c+c1}{// Take the input from stdin and pipe it through }
\PYG{c+c1}{// the series of functions we setup earlier to }
\PYG{c+c1}{// emit a stream of http post requests.}
\PYG{c+c1}{// ===============================================}
\PYG{n+nx}{process}
  \PYG{p}{.}\PYG{n+nx}{stdin}
  \PYG{p}{.}\PYG{n+nx}{pipe}\PYG{p}{(}\PYG{n+nx}{csv}\PYG{p}{.}\PYG{n+nx}{parse}\PYG{p}{())}
  \PYG{p}{.}\PYG{n+nx}{pipe}\PYG{p}{(}\PYG{n+nx}{csv}\PYG{p}{.}\PYG{n+nx}{transform}\PYG{p}{((}\PYG{n+nx}{record}\PYG{p}{)} \PYG{p}{=\PYGZgt{}} 
    \PYG{p}{\PYGZob{}}\PYG{k}{return}\PYG{p}{(}\PYG{n+nx}{clean\PYGZus{}record}\PYG{p}{(}\PYG{n+nx}{record}\PYG{p}{));\PYGZcb{}))}
  \PYG{p}{.}\PYG{n+nx}{pipe}\PYG{p}{(}\PYG{n+nx}{buffer\PYGZus{}data}\PYG{p}{)}
\end{Verbatim}
